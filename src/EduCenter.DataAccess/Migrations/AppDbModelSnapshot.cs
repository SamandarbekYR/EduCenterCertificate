// <auto-generated />
using System;
using EduCenter.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EduCenter.DataAccess.Migrations
{
    [DbContext(typeof(AppDb))]
    partial class AppDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EduCenter.Domain.Entities.Sertifikat.Sertifikate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CandidateNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CertificateNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CertificateType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExamCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("ListeningScore")
                        .HasColumnType("real");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlaseOfBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("ReadingScore")
                        .HasColumnType("real");

                    b.Property<float>("SpeakingScore")
                        .HasColumnType("real");

                    b.Property<float>("TotalScore")
                        .HasColumnType("real");

                    b.Property<float>("WritingScore")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("sertificate");
                });
#pragma warning restore 612, 618
        }
    }
}
